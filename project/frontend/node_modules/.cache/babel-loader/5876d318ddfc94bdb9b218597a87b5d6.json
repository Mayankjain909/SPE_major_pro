{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/spe_major project/rohan_thakkar/SPE-Major-Project-main/frontend/src/components/charts/status-chart.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = ['Open', 'In Progress', 'Resolved'];\nconst backgroundColor = ['gold', 'cornflowerblue', 'darkslategray'];\nconst options = {\n  maintainAspectRatio: false,\n  responsive: false\n};\nexport default class StatusChart extends Component {\n  constructor(props) {\n    super(props);\n    this.open = 0;\n    this.progress = 0;\n    this.resolved = 0;\n    this.state = {\n      tickets: [],\n      data: {\n        datasets: [{\n          data: [0, 0, 0],\n          backgroundColor: backgroundColor\n        }],\n        labels: labels\n      }\n    };\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/tickets/').then(res => {\n      this.setState({\n        tickets: res.data\n      });\n      this.state.tickets.map(ticket => {\n        // get number of each type and update state data\n        switch (ticket.status) {\n          case 'Open':\n            this.open++;\n            break;\n          case 'In Progress':\n            this.progress++;\n            break;\n          case 'Resolved':\n            this.resolved++;\n            break;\n        }\n        this.setState({\n          data: {\n            datasets: [{\n              data: [this.open, this.progress, this.resolved]\n            }]\n          }\n        });\n      });\n    }).catch(error => console.log(error));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: this.state.data,\n        options: options,\n        height: 300,\n        width: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","Doughnut","jsxDEV","_jsxDEV","labels","backgroundColor","options","maintainAspectRatio","responsive","StatusChart","constructor","props","open","progress","resolved","state","tickets","data","datasets","componentDidMount","get","then","res","setState","map","ticket","status","catch","error","console","log","render","children","height","width","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/mayank/Desktop/spe_major project/rohan_thakkar/SPE-Major-Project-main/frontend/src/components/charts/status-chart.component.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst labels = ['Open', 'In Progress', 'Resolved'];\nconst backgroundColor = ['gold', 'cornflowerblue', 'darkslategray'];\nconst options = {\n\tmaintainAspectRatio: false,\n\tresponsive: false,\n}\n\nexport default class StatusChart extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.open = 0;\n\t\tthis.progress = 0;\n\t\tthis.resolved = 0;\n\n\t\tthis.state = { \n\t\t\ttickets: [],\n\t\t\tdata: {\n\t\t\t    datasets: [{\n\t\t\t        data: [0, 0, 0],\n\t\t\t        backgroundColor: backgroundColor\n\t\t\t    }],\n\n\t\t\t    labels: labels\n\t\t\t}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n        axios.get('http://localhost:5000/tickets/')\n            .then(res => {\n                this.setState({ tickets: res.data });\n                this.state.tickets.map(ticket => {\n                \t// get number of each type and update state data\n                \tswitch(ticket.status){\n                \t\tcase 'Open': \n                \t\t\tthis.open++;\n                \t\t\tbreak;\n                \t\tcase 'In Progress':\n                \t\t\tthis.progress++;\n                \t\t\tbreak;\n                \t\tcase 'Resolved':\n                \t\t\tthis.resolved++;\n                \t\t\tbreak;\n                \t}\n\n                \tthis.setState({ data: {\n                \t\tdatasets: [{\n                \t\t\tdata: [this.open, this.progress, this.resolved]\n        \t\t\t \t}]\n        \t\t\t}});\n                });\n            })\n            .catch(error => console.log(error));\n    }\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Doughnut \n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\toptions={options}\n\t\t\t\t\theight={300}\n\t\t\t\t\twidth={500} />\n\t\t\t</div>\n\t\t);\n\t}\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,aAAa,EAAE,UAAU,CAAC;AAClD,MAAMC,eAAe,GAAG,CAAC,MAAM,EAAE,gBAAgB,EAAE,eAAe,CAAC;AACnE,MAAMC,OAAO,GAAG;EACfC,mBAAmB,EAAE,KAAK;EAC1BC,UAAU,EAAE;AACb,CAAC;AAED,eAAe,MAAMC,WAAW,SAASV,SAAS,CAAC;EAClDW,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,QAAQ,GAAG,CAAC;IAEjB,IAAI,CAACC,KAAK,GAAG;MACZC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;QACFC,QAAQ,EAAE,CAAC;UACPD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACfZ,eAAe,EAAEA;QACrB,CAAC,CAAC;QAEFD,MAAM,EAAEA;MACZ;IACD,CAAC;EACF;EAEAe,iBAAiBA,CAAA,EAAG;IACbnB,KAAK,CAACoB,GAAG,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACC,QAAQ,CAAC;QAAEP,OAAO,EAAEM,GAAG,CAACL;MAAK,CAAC,CAAC;MACpC,IAAI,CAACF,KAAK,CAACC,OAAO,CAACQ,GAAG,CAACC,MAAM,IAAI;QAChC;QACA,QAAOA,MAAM,CAACC,MAAM;UACnB,KAAK,MAAM;YACV,IAAI,CAACd,IAAI,EAAE;YACX;UACD,KAAK,aAAa;YACjB,IAAI,CAACC,QAAQ,EAAE;YACf;UACD,KAAK,UAAU;YACd,IAAI,CAACC,QAAQ,EAAE;YACf;QACF;QAEA,IAAI,CAACS,QAAQ,CAAC;UAAEN,IAAI,EAAE;YACrBC,QAAQ,EAAE,CAAC;cACVD,IAAI,EAAE,CAAC,IAAI,CAACL,IAAI,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ;YACpD,CAAC;UACH;QAAC,CAAC,CAAC;MACE,CAAC,CAAC;IACN,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;EAEHG,MAAMA,CAAA,EAAG;IACR,oBACC5B,OAAA;MAAA6B,QAAA,eACC7B,OAAA,CAACF,QAAQ;QACRgB,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAK;QACtBX,OAAO,EAAEA,OAAQ;QACjB2B,MAAM,EAAE,GAAI;QACZC,KAAK,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAER;AACD"},"metadata":{},"sourceType":"module"}